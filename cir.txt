#include <GL/glut.h>
#include <cmath>

// Midpoint circle algorithm
void drawMidpointCircle(int xc, int yc, int r) {
  int x, y, d;

  x = 0;
  y = r;
  d = 1 - r;

  glBegin(GL_POINTS);
  while (x <= y) {
    glVertex2i(xc + x, yc + y);
    glVertex2i(xc + x, yc - y);
    glVertex2i(xc - x, yc + y);
    glVertex2i(xc - x, yc - y);
    glVertex2i(xc + y, yc + x);
    glVertex2i(xc + y, yc - x);
    glVertex2i(xc - y, yc + x);
    glVertex2i(xc - y, yc - x);

    if (d < 0) {
      d += 2 * x + 3;
    } else {
      d += 2 * (x - y) + 5;
      y--;
    }
    x++;
  }
  glEnd();
}

void display() {
  glClear(GL_COLOR_BUFFER_BIT);  // Clear the screen

  drawMidpointCircle(200, 200, 100);  // Draw a circle at (200, 200) with radius 100

  glFlush();  // Force drawing
}

int main(int argc, char** argv) {
  glutInit(&argc, argv);
  glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
  glutInitWindowSize(400, 400);
  glutCreateWindow("Midpoint Circle Algorithm");
  glClearColor(0.0, 0.0, 0.0, 1.0);  // Set the background color to black
  glMatrixMode(GL_PROJECTION);
  glLoadIdentity();
  gluOrtho2D(0, 400, 0, 400);  // Set the viewing area
  glutDisplayFunc(display);
  glutMainLoop();
  return 0;
}
